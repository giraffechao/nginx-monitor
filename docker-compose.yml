version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - devops-compose  
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /etc/nginx/nginx.conf
        user  nginx;
        worker_processes  5;  ## Default: 1

        events {
          worker_connections   1000;
        }

        http {
          resolver 127.0.0.11;

          server {
            listen 8080;
            server_name _;

            location /stub_status {
                stub_status;
            }
                    
          }
        }
        EOF
        /docker-entrypoint.sh nginx -g "daemon off;"
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 10s
      timeout: 5s
      retries: 5


  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    container_name: nginx-prometheus-exporter
    hostname: nginx-prometheus-exporter
    restart: unless-stopped
    command: --nginx.scrape-uri=http://nginx:8080/stub_status
    ports:
      - 9113:9113
    networks:
      - devops-compose  
  
  prometheus:
    image: bitnami/prometheus:2.40.1
    hostname: prometheus
    container_name: prometheus
    restart: unless-stopped
    networks:
      - devops-compose
    ports:
      - 9090:9090

  promtail:
    image: grafana/promtail
    hostname: promtail
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - devops-compose  

    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      # 采集日志的核心api: 本地docker的unix内核通信+docker容器的api实现容器和日志获取操作  
      - /var/run/docker.sock:/var/run/docker.sock

  loki:
    image: grafana/loki
    hostname: loki
    container_name: loki
    restart: unless-stopped
    networks:
      - devops-compose  


  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - devops-compose  
    volumes:
     - 'grafana_storage:/var/lib/grafana'




volumes:
  grafana_storage: {}

networks:
  devops-compose:
    external: true
